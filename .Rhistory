eventtype = event_type
)
###
devtools::install_github("zheer-kejlberg/plotsurv")
?install_github
?devtools::install_github
###
devtools::install_github("zheer-kejlberg/plotsurv", force = T)
###
devtools::install_github("zheer-kejlberg/plotsurv", force = T)
library(plotsurv)
fit <- survfit(Surv(time2, factor(eventtype)) ~ group,
data = tte.table)
fit <- survival::survfit(Surv(time2, factor(eventtype)) ~ group,
data = tte.table)
library(survival)
fit <- survfit(Surv(time2, factor(eventtype)) ~ group,
data = tte.table)
### CALL PLOTTING FUNCTION WITH VARIOUS ARGUMENTS
plot_surv(fit)
### CALL PLOTTING FUNCTION WITH VARIOUS ARGUMENTS
plotsurv(fit)
###
devtools::install_github("zheer-kejlberg/plotsurv", force = T)
?plotsurv
library(plotsurv)
library(plotsurv)
library(survival)
?plotsurv
fit <- survfit(Surv(time2, factor(eventtype)) ~ group,
data = tte.table)
### CALL PLOTTING FUNCTION WITH VARIOUS ARGUMENTS
plotsurv(fit)
###
devtools::install_github("zheer-kejlberg/plotsurv", force = T)
library(plotsurv)
library(survival)
library(survival)
?plotsurv
?plotsurv
###
devtools::install_github("zheer-kejlberg/plotsurv", force = T)
library(plotsurv)
library(survival)
?plotsurv
fit <- survfit(Surv(time2, factor(eventtype)) ~ group,
data = tte.table)
### CALL PLOTTING FUNCTION WITH VARIOUS ARGUMENTS
plotsurv(fit)
###
devtools::install_github("zheer-kejlberg/plotsurv", force = T)
library(plotsurv)
library(survival)
?plotsurv
fit <- survfit(Surv(time2, factor(eventtype)) ~ group,
data = tte.table)
### CALL PLOTTING FUNCTION WITH VARIOUS ARGUMENTS
plotsurv(fit)
###
devtools::install_github("zheer-kejlberg/plotsurv", force = T)
library(plotsurv)
library(survival)
?plotsurv
fit <- survfit(Surv(time2, factor(eventtype)) ~ group,
data = tte.table)
### CALL PLOTTING FUNCTION WITH VARIOUS ARGUMENTS
plotsurv(fit)
library(dplyr)
n <- 10000
group = ifelse(rbinom(n, 1, 0.5) == 1, "Treated", "Untreated")
lambda1 <- 0.005 + (group == "Treated") * 0.001   # hazard for cause 1
lambda2 <- 0.002 + (group == "Treated") * 0.001  # hazard for cause 2
t1 <- rexp(n, rate = lambda1)
t2 <- rexp(n, rate = lambda2)
censortime <- runif(n, min = 100, max = 365)
event_time <- pmin(t1, t2, censortime)
event_type <- ifelse(t1 < t2 & t1 < censortime, 1,
ifelse(t2 < t1 & t2 < censortime, 2, 0))
#event_type <- paste0("p",event_type)
tte.table <- tibble(
group = group,
time2 = event_time,
eventtype = event_type
)
###
devtools::install_github("zheer-kejlberg/plotsurv", force = T)
library(plotsurv)
library(survival)
?plotsurv
fit <- survfit(Surv(time2, factor(eventtype)) ~ group,
data = tte.table)
### CALL PLOTTING FUNCTION WITH VARIOUS ARGUMENTS
plotsurv(fit)
event_type <- paste0("p",event_type,"lo")
library(dplyr)
n <- 10000
group = ifelse(rbinom(n, 1, 0.5) == 1, "Treated", "Untreated")
lambda1 <- 0.005 + (group == "Treated") * 0.001   # hazard for cause 1
lambda2 <- 0.002 + (group == "Treated") * 0.001  # hazard for cause 2
t1 <- rexp(n, rate = lambda1)
t2 <- rexp(n, rate = lambda2)
censortime <- runif(n, min = 100, max = 365)
event_time <- pmin(t1, t2, censortime)
event_type <- ifelse(t1 < t2 & t1 < censortime, 1,
ifelse(t2 < t1 & t2 < censortime, 2, 0))
event_type <- paste0("p",event_type,"lo")
tte.table <- tibble(
group = group,
time2 = event_time,
eventtype = event_type
)
###
devtools::install_github("zheer-kejlberg/plotsurv", force = T)
library(plotsurv)
library(survival)
?plotsurv
fit <- survfit(Surv(time2, factor(eventtype)) ~ group,
data = tte.table)
### CALL PLOTTING FUNCTION WITH VARIOUS ARGUMENTS
plotsurv(fit)
?plotsurv
###
#devtools::install_github("zheer-kejlberg/plotsurv", force = T)
library(plotsurv)
?plotsurv
###
devtools::install_github("zheer-kejlberg/plotsurv", force = T)
###
#devtools::install_github("zheer-kejlberg/plotsurv", force = T)
library(plotsurv)
library(survival)
?plotsurv
plot_CIFs(fit, include_surv = T,
group_labels = c("Treated, survival",
"Treated, event 1",
"Treated, event 2",
"Untreated, survival",
"Untreated, event 1",
"Untreated, event 2"),
colors = c("#3A488A",
"#E6AFA7",
"#E5AD4F",
"#8785B2",
"#6D8325",
"#BD5630")
)
plotsurv(fit, include_surv = T,
group_labels = c("Treated, survival",
"Treated, event 1",
"Treated, event 2",
"Untreated, survival",
"Untreated, event 1",
"Untreated, event 2"),
colors = c("#3A488A",
"#E6AFA7",
"#E5AD4F",
"#8785B2",
"#6D8325",
"#BD5630")
)
### CALL PLOTTING FUNCTION WITH VARIOUS ARGUMENTS
plotsurv(fit)
###
#devtools::install_github("zheer-kejlberg/plotsurv", force = T)
library(plotsurv)
###
devtools::install_github("zheer-kejlberg/plotsurv", force = T)
library(plotsurv)
fit <- survfit(Surv(time2, factor(eventtype)) ~ group,
data = tte.table)
### CALL PLOTTING FUNCTION WITH VARIOUS ARGUMENTS
plotsurv(fit)
plotsurv(fit, include_surv = T,
group_labels = c("Treated, survival",
"Treated, event 1",
"Treated, event 2",
"Untreated, survival",
"Untreated, event 1",
"Untreated, event 2"),
colors = c("#3A488A",
"#E6AFA7",
"#E5AD4F",
"#8785B2",
"#6D8325",
"#BD5630")
)
View(fit)
View(fit)
select_event <- c(2)
fit[["n.event"]][,select_events]
fit[["n.event"]][,select_event]
fit[["n.event"]]
fit[["n.event"]][,c(1,2)]
###
devtools::install_github("zheer-kejlberg/plotsurv", force = T)
library(plotsurv)
?plotsurv
fit <- survfit(Surv(time2, factor(eventtype)) ~ group,
data = tte.table)
### CALL PLOTTING FUNCTION WITH VARIOUS ARGUMENTS
plotsurv(fit)
###
devtools::install_github("zheer-kejlberg/plotsurv", force = T)
library(plotsurv)
?plotsurv
plotsurv(fit, include_surv = T,
group_labels = c("Treated, survival",
"Treated, event 1",
"Treated, event 2",
"Untreated, survival",
"Untreated, event 1",
"Untreated, event 2"),
colors = c("#3A488A",
"#E6AFA7",
"#E5AD4F",
"#8785B2",
"#6D8325",
"#BD5630")
)
plotsurv(fit, include_surv = T,
group_labels = c("Treated, survival",
"Treated, event 1",
"Treated, event 2",
"Untreated, survival",
"Untreated, event 1",
"Untreated, event 2"),
colors = c("#3A488A",
"#E6AFA7",
"#E5AD4F",
"#8785B2",
"#6D8325",
"#BD5630"),
display_event = c("1")
)
plotsurv(fit, include_surv = T,
group_labels = c("Treated, survival",
"Treated, event 1",
"Treated, event 2",
"Untreated, survival",
"Untreated, event 1",
"Untreated, event 2"),
colors = c("#3A488A",
"#E6AFA7",
"#E5AD4F",
"#8785B2",
"#6D8325",
"#BD5630"),
display_event = c("1")
)
fit <- survfit(Surv(time2, factor(eventtype)) ~ group,
data = tte.table)
library(survival)
fit <- survfit(Surv(time2, factor(eventtype)) ~ group,
data = tte.table)
plotsurv(fit, include_surv = T,
group_labels = c("Treated, survival",
"Treated, event 1",
"Treated, event 2",
"Untreated, survival",
"Untreated, event 1",
"Untreated, event 2"),
colors = c("#3A488A",
"#E6AFA7",
"#E5AD4F",
"#8785B2",
"#6D8325",
"#BD5630"),
display_event = c("1")
)
View(fit)
library(dplyr)
n <- 10000
group = ifelse(rbinom(n, 1, 0.5) == 1, "Treated", "Untreated")
lambda1 <- 0.005 + (group == "Treated") * 0.001   # hazard for cause 1
lambda2 <- 0.002 + (group == "Treated") * 0.001  # hazard for cause 2
t1 <- rexp(n, rate = lambda1)
t2 <- rexp(n, rate = lambda2)
censortime <- runif(n, min = 100, max = 365)
event_time <- pmin(t1, t2, censortime)
event_type <- ifelse(t1 < t2 & t1 < censortime, 1,
ifelse(t2 < t1 & t2 < censortime, 2, 0))
#event_type <- paste0("p",event_type,"lo")
tte.table <- tibble(
group = group,
time2 = event_time,
eventtype = event_type
)
###
devtools::install_github("zheer-kejlberg/plotsurv", force = T)
library(plotsurv)
library(survival)
?plotsurv
fit <- survfit(Surv(time2, factor(eventtype)) ~ group,
data = tte.table)
### CALL PLOTTING FUNCTION WITH VARIOUS ARGUMENTS
plotsurv(fit)
plotsurv(fit, include_surv = T,
group_labels = c("Treated, survival",
"Treated, event 1",
"Treated, event 2",
"Untreated, survival",
"Untreated, event 1",
"Untreated, event 2"),
colors = c("#3A488A",
"#E6AFA7",
"#E5AD4F",
"#8785B2",
"#6D8325",
"#BD5630"),
display_event = c("1")
)
plotsurv(fit, include_surv = T,
group_labels = c("Treated, survival",
"Treated, event 1",
"Treated, event 2",
"Untreated, survival",
"Untreated, event 1",
"Untreated, event 2"),
colors = c("#3A488A",
"#E6AFA7",
"#E5AD4F",
"#8785B2",
"#6D8325",
"#BD5630")
)
plotsurv(fit,
include_surv = F,
display_event = c("1")
)
plotsurv(fit,
include_surv = F,
include_CIFs = T,
display_event = c("1")
)
plotsurv(fit,
include_surv = F,
include_CIFs = F,
display_event = c("1")
)
plotsurv(fit,
include_surv = T,
include_CIFs = F,
display_event = c("1")
)
plotsurv(fit,
include_surv = T,
include_CIFs = T,
display_event = c("1")
)
plotsurv(fit,
include_surv = F
)
plotsurv(fit,
include_surv = F,
display_event = c("1")
)
plotsurv(fit,
include_surv = T,
display_event = c("1")
)
x <- rbinom(100,2,0.5)
words <- c("word1 ", "word2 ", "word3 ")
words <- sample(words, size = 1000, replace = T)
words <- c("word1 ", "word2 ", "word3 ")
words <- sample(words, size = 100, replace = T)
t <- paste0(x, words)
x <- rbinom(100,2,0.5)
words <- c("word1", "word2", "word3")
words <- sample(words, size = 100, replace = T)
t <- paste(x, words, sep="")
x <- rbinom(100,2,0.5)
words <- c("word1", "word2", "word3")
words <- sample(words, size = 100, replace = T)
t <- paste(x, words, sep=" ")
?gsub
df <- data.frame(
t = t
)
View(df)
library(dplyr)
df <- df %>% mutate(
word = gsub("\d", "", t)
df <- df %>% mutate(
word = gsub("\\d+", "", t)
)
View(df)
df <- df %>% mutate(
word = gsub("^\\d+", "", t)
)
View(df)
df <- df %>% mutate(
word = gsub("^\\d ", "", t)
)
View(df)
df <- df %>% mutate(
word = gsub("^\\d ", "", t),
no = gsub("^\\d.*", "\\d", t)
)
View(df)
df <- df %>% mutate(
word = gsub("^\\d ", "", t),
no = gsub("^\\d.*", "\d", t)
View(df)
df <- df %>% mutate(
word = gsub("^\\d ", "", t),
no = stringr::str_sub(t, 1, 2)
)
View(df)
df <- df %>% mutate(
word = gsub("^\\d ", "", t),
no = stringr::str_sub(t, 1, 1)
)
View(df)
df <- df %>% mutate(
no = stringr::str_sub(t, 3, -1),
no = stringr::str_sub(t, 1, 1)
)
View(df)
df <- df %>% mutate(
no = stringr::str_sub(t, 1, 1),
no = stringr::str_sub(t, 3, -1)
)
View(df)
df <- df %>% mutate(
word = stringr::str_sub(t, 3, -1),
no = stringr::str_sub(t, 1, 1)
)
View(df)
df <- df %>% mutate(
no = stringr::str_sub(t, 1, 1),
word = stringr::str_sub(t, 3, -1)
)
View(df)
df <- data.frame(
t = t
)
df <- df %>% mutate(
no = stringr::str_sub(t, 1, 1),
word = stringr::str_sub(t, 3, -1)
)
View(df)
df <- data.frame(
t = t
)
View(df)
x <- rbinom(100,2,0.5)
words <- c("shut", "up", "fuck")
words <- sample(words, size = 100, replace = T)
t <- paste(x, words, sep=" ")
df <- data.frame(
t = t
)
View(df)
df <- df %>% mutate(
no = stringr::str_sub(t, 1, 1),
word = gsub("^\\d ", "k", t)
)
df <- df %>% mutate(
no = gsub(" .*$", "", t),
word = gsub("^\\d ", "", t)
)
View(df)
x <- rbinom(100,2,0.5)
words <- c("shut lol", "up", "fuck")
words <- sample(words, size = 100, replace = T)
t <- paste(x, words, sep=" ")
df <- data.frame(
t = t
)
df <- df %>% mutate(
no = gsub(" .*$", "", t),
word = gsub("^\\d ", "", t)
)
View(df)
n <- 100
n <- 100
group = ifelse(rbinom(n, 1, 0.5) == 1, "Treated", "Untreated")
lambda1 <- 0.005 + (group == "Treated") * 0.001   # hazard for cause 1
lambda2 <- 0.002 + (group == "Treated") * 0.001  # hazard for cause 2
t1 <- rexp(n, rate = lambda1)
t2 <- rexp(n, rate = lambda2)
censortime <- runif(n, min = 100, max = 365)
event_time <- pmin(t1, t2, censortime)
event_type <- ifelse(t1 < t2 & t1 < censortime, 1,
ifelse(t2 < t1 & t2 < censortime, 2, 0))
#event_type <- paste0("p",event_type,"lo")
tte.table <- tibble(
group = group,
time2 = event_time,
eventtype = event_type
)
###
devtools::install_github("zheer-kejlberg/plotsurv", force = T)
library(plotsurv)
library(survival)
?plotsurv
fit <- survfit(Surv(time2, factor(eventtype)) ~ group,
data = tte.table)
### CALL PLOTTING FUNCTION WITH VARIOUS ARGUMENTS
plotsurv(fit)
plotsurv(fit,
include_surv = T,
display_event = c("1")
)
?plotsurv
###
#devtools::install_github("zheer-kejlberg/plotsurv", force = T)
library(plotsurv)
###
#devtools::install_github("zheer-kejlberg/plotsurv", force = T)
library(plotsurv)
?plotsurv
